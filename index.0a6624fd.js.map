{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAgC,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAC1D,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAU,SAAS,aAAa,CAAC,YAEnC,EAAW,EACX,EAAa,EAEjB,EAA0B,OAAO,CAAC,SAAC,CAAnC,EACE,IAAM,EAAS,OAAO,EAAS,WAAW,CAAC,UAAU,CAAC,IAAK,KAE3D,GAAY,CACd,GAEA,EAAc,AAAA,CAAA,EAAW,EAAA,EAAI,cAAc,CAAC,SAC5C,EAAW,EAAS,cAAc,CAAC,SAEnC,EAAM,WAAW,CAAG,UAAmB,MAAA,CAAT,GAC9B,EAAQ,WAAW,CAAG,YAAuB,MAAA,CAAX","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar ArrayOfSelectorPopulation = _to_consumable_array(document.querySelectorAll(\".population\"));\nvar total = document.querySelector(\".total\");\nvar average = document.querySelector(\".average\");\nvar newTotal = 0;\nvar newAverage = 0;\nArrayOfSelectorPopulation.forEach(function(selector) {\n    var NUMBER = Number(selector.textContent.replaceAll(\",\", \"\"));\n    newTotal += NUMBER;\n});\nnewAverage = (newTotal / 10).toLocaleString(\"en-US\");\nnewTotal = newTotal.toLocaleString(\"en-US\");\ntotal.textContent = \"Total: \".concat(newTotal);\naverage.textContent = \"Average: \".concat(newAverage);\n\n//# sourceMappingURL=index.0a6624fd.js.map\n","'use strict';\n\nconst ArrayOfSelectorPopulation = [...document.querySelectorAll('.population')];\nconst total = document.querySelector('.total');\nconst average = document.querySelector('.average');\n\nlet newTotal = 0;\nlet newAverage = 0;\n\nArrayOfSelectorPopulation.forEach((selector) => {\n  const NUMBER = Number(selector.textContent.replaceAll(',', ''));\n\n  newTotal += NUMBER;\n});\n\nnewAverage = (newTotal / 10).toLocaleString('en-US');\nnewTotal = newTotal.toLocaleString('en-US');\n\ntotal.textContent = `Total: ${newTotal}`;\naverage.textContent = `Average: ${newAverage}`;\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","ArrayOfSelectorPopulation","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","total","querySelector","average","newTotal","newAverage","forEach","selector","NUMBER","Number","textContent","replaceAll","toLocaleString","concat"],"version":3,"file":"index.0a6624fd.js.map"}